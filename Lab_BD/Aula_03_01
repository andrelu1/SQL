Subqueries:
Consulta principal
FROM tabela
WHERE coluna OPERADOR(Subquerie)

Operadores usados quando a SUBQUERIE retorna mais de um registro.

--Exibir o nome do departamento somente quando omenor salario for maior que o do depto. 50.

OBS> No SQL Livee Antes do nome da Tabela colocar o Owner.

--Exibir o nome do departamento somente quando o menor salario medio for maior que o do depto.50
SELECT d.department_name, AVG(e.salary) 
FROM HR.employees e, HR.departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name;
HAVING MIN(salary) > (SELECT MIN(salary) FROM HR.employees WHERE department_id = 50);


--Exibir o nome do departamento somente quando o menor salario medio for maior que o do depto.50
SELECT d.department_name, AVG(e.salary) 
FROM HR.employees e, HR.departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name;
HAVING MIN(salary) > (SELECT MIN(salary) FROM HR.employees WHERE department_id = 50);

--Exibir o nome, o salario e o ID do depto, dos empregados que ganham salario minimo, independete
--a) QUal o menor salario por depto.

SELECT MIN(salary), department_id
FROM HR.employees
GROUP BY department_id; 

SELECT first_name, salary department_id
FROM employees
WHERE salary IN (SELECT MIN(salary)
                 FROM employees 
                 GROUP BY department_id)
ORDER BY salary;

-- Exibir todos os funcionarios que não tenham nenhum subordinado, utilizando subquerie.
--(Utilizar o NOT IN)

SELECT e.last_name
FROM employees e
WHERE e.employee_id NOT IN (SELECT g.manager_id
                 FROM employees g 
                 WHERE g.manager_id IS NOT NULL);

--Exibir o nome do departamento somente quando o menor salario medio for maior que o do depto.50
SELECT d.department_name, AVG(e.salary) 
FROM HR.employees e, HR.departments d
WHERE e.department_id = d.department_id
GROUP BY d.department_name;
HAVING MIN(salary) > (SELECT MIN(salary) FROM HR.employees WHERE department_id = 50);

--Exibir o nome, o salario e o ID do depto, dos empregados que ganham salario minimo, independete
--a) QUal o menor salario por depto.

SELECT MIN(salary), department_id
FROM HR.employees
GROUP BY department_id; 

SELECT first_name, salary department_id
FROM employees
WHERE salary IN (SELECT MIN(salary)
                 FROM employees 
                 GROUP BY department_id)
ORDER BY salary;

-- Exibir todos os funcionarios que não tenham nenhum subordinado, utilizando subquerie.
--(Utilizar o NOT IN)

SELECT e.last_name
FROM employees e
WHERE e.employee_id NOT IN (SELECT g.manager_id
                 FROM employees g 
                 WHERE g.manager_id IS NOT NULL);
                 
                 
-- Exibir o id do empregado, sobrenome, id do cargo e o salario dos funcionarios
-- Que ganham menos que o maior salario do empregado com id de programador(IT_PROG) e que não tenha esta função na empresa
--A) Quais são os salarios de programadores de TI na empresa.
-- ANY analisa todo o conjunto e não apenas um da tabela.

SELECT salary FROM HR.employees 
WHERE job_id = 'IT_PROG'
ORDER BY 1;

SELECT employee_id, last_name, job_id, salary
FROM HR.employees
WHERE salary < ANY(SELECT salary FROM employees WHERE job_id = 'IT_PROG')
AND job_id <> 'IT_PROG';

-- ANY vai olhar o resultado da subquerie, procura o melhor valor(9000) e exibe todos MENORES que 9000

-- Alterar o oprador <ANY para o ALL e diga o que esta o ocorrendo(Menor salario 4200.
SELECT employee_id, last_name, job_id, salary
FROM HR.employees
WHERE salary < ALL(SELECT salary FROM employees WHERE job_id = 'IT_PROG')
AND job_id <> 'IT_PROG';

-- Exibir o sobrenome, o salario, o id do depto e a media (salario medio do empregado, dentro de seu departamento
-- De quem ganha mais do que a media no seu setor.

SELECT e.last_name, e.salary, e.department_id, m.media
FROM employees e, 
                  (SELECT department_id, AVG(salary) media 
                   FROM employees
                   GROUP BY department_id) m
WHERE e.department_id = m.department_id
AND e.salary > m.media;

--Operador Exists ou NOT Exists(FLAG - TRUE OU FALSE)
--Exibir as pessoas que tem pelo menos um sobordinado.
--OBS, EXISTS é semelhante ao IN

SELECT e.last_name, e.job_id
FROM employees e
WHERE EXISTS (SELECT 'X' FROM employees WHERE manager_id = e.employee_id);

-- ALterar para quem não tem subordinado usando exists.
